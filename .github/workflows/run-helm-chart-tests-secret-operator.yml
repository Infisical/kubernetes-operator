name: Run Helm Chart Tests for Secret Operator
on:
  pull_request:
    paths:
      - "helm-charts/secrets-operator/**"
      - ".github/workflows/run-helm-chart-tests-secret-operator.yml"

jobs:
  test-helm:
    name: Test Helm Chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: v3.17.0

      - uses: actions/setup-python@v5.3.0
        with:
          python-version: "3.x"
          check-latest: true

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.7.0

      - name: Run chart-testing (lint)
        run: ct lint --config ct.yaml --charts helm-charts/secrets-operator

      - name: Create kind cluster
        uses: helm/kind-action@v1.12.0

      - name: Install CRDs first
        run: |
          echo "Installing CRDs before testing with minimal permissions..."
          kubectl apply -f config/crd/bases/

      - name: Setup minimal RBAC user for testing
        run: |
          echo "Creating minimal RBAC user for chart testing..."

          # Create a service account for minimal testing
          kubectl create serviceaccount minimal-test-user -n kube-system

          # Apply the existing minimal-rbac.yaml file
          kubectl apply -f helm-charts/secrets-operator/ci/minimal-rbac.yaml

      - name: Run chart-testing (install) with minimal permissions
        run: |
          # Set up environment to use the minimal user for helm/kubectl operations
          TOKEN=$(kubectl create token minimal-test-user -n kube-system --duration=1h)

          # Get the current cluster info
          CLUSTER_NAME=$(kubectl config current-context)
          SERVER_URL=$(kubectl config view --minify --output jsonpath='{.clusters[0].cluster.server}')
          CA_DATA=$(kubectl config view --minify --raw --output jsonpath='{.clusters[0].cluster.certificate-authority-data}')

          # Create a temporary kubeconfig for the minimal user
          export KUBECONFIG_MINIMAL=/tmp/kubeconfig-minimal

          # Create a minimal kubeconfig with the cluster info and user token
          cat > $KUBECONFIG_MINIMAL <<EOF
          apiVersion: v1
          kind: Config
          clusters:
          - cluster:
              certificate-authority-data: $CA_DATA
              server: $SERVER_URL
            name: $CLUSTER_NAME
          contexts:
          - context:
              cluster: $CLUSTER_NAME
              user: minimal-test-user
            name: minimal-test-context
          current-context: minimal-test-context
          users:
          - name: minimal-test-user
            user:
              token: $TOKEN
          EOF

          # Verify connection with the minimal kubeconfig
          kubectl --kubeconfig=$KUBECONFIG_MINIMAL get namespaces

          # Run chart testing with the minimal permissions kubeconfig
          KUBECONFIG=$KUBECONFIG_MINIMAL ct install --config ct.yaml --charts helm-charts/secrets-operator
